<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ordemServicoNewDataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAVCAYAAAC6wOViAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNzNun2MAAASJSURBVEhL7ZV/
        TNR1GMePu+MQBHEkW2G55RaxmTnXnFauJSAxkEZ0iA4GXHBFudzStJq5Nv9ozT/Kfxgtx/Kf1hCCZM3g
        RNFlmKBBCIEdiQFyd3R3wP2Cu4Ot13P7fpmdxPqrv3q2Z9/PfZ7n87yf5/08n89psrNf1Nhsk7pQKJS/
        sLBwAR1F7ah1cXHxOtrJ2oK2sY6ouubbGQ6HP5+fn986MzOjlViqrijicP78dwYOFhPA7Pf7s9AqkjgS
        DAYPz83NVXg8s897vZ7H7t2bSDh48C0dZ7QtLc0al8u1Bd+j+GS53W697KNij5G4osuKGIaGftWT9asc
        NvX19abU15/WTU1NPUTQ7QQtC4dDR0jiWCAQqHA6/3yyu/u6vqxsn25iYmKrgJJcZlvb93HEEmABFBVw
        BWUZsVp/0wNopFqT2+1KxlnNWNva+q327t3RFI/HswvgD/ApGx4eWmc0vqJ3uZybAT00Ozub1dz8jYBK
        EQKoVq0gRIkYWlvPGci2eGEhbOrv70thT6VIzVhP3xMA3SN02+32tJoas2Z8fPxh2HiBfmaQeFxR0csC
        9u/opQqd0Ovz+apGRqxrlQOSaSwaoenWrf4E/ApIrgy/R2TfbH7NYLPZUqjWDPW1JJAmvqharYISJWKg
        j7EcLKaSSipZw54KGKEI1V2+3JkIYD5aDt0br13rSp6edicBmnTnzu8bOX8MWyMDt62h4eukkhKjVoF4
        UCSoxdIm9BoBNQ0MDCxHL4PliBfQubnAG36/Lw/fUtTMnpnv63wP8+1AzwUC/i1NTWdX7imTque6RKbX
        av0bvUvgXV0/JkKr0Fvp83mfsttt6dCZwWClM0jbsL3H+ivimMbGxlJLS/etTK/F0m6gJ3JPK7hvQm+k
        OgGbnp6WnhkJWgPguwSuGhv741HVfvNmz2p8ctiXyc6+dKkjXrUpEA8KRs3FixdiATQS1NTb+7PQK1VK
        hVqHw57Ofh16lqC1sPEmIGnc0xiuTipJ7mBvBxO8ob7+i7icnMyls6iCEiVioAc6QIvoVyWDIfdU9iPV
        8gCs8nq9GbTgWSquoGflrNcXFu6Jpc9PA/gO9swzZ76M3717l4DJWfXqKChRIoaWliYD16FE+uF0OgVU
        DkV6gkog/ZUrnYmhUDBfXqXbt4c3VFebtPRyM7QfZYpzenq6DYp/JFllraBEiRg6OixCb1EwOG/u7/9l
        HXsRapSvBNCOjo4mUFUBrFQ5HI4naEPS5OTkTqr/EOqz2tuXnkEV8J/pFblxo0fHo/4cQT+mbyVUTX9O
        r8rNzZYAkf5cvfpDIlXKU/kZdB6nl29T6XH2TtDj7XV1tQKq0rtU7bIihv3792qpMJmAL6Eyoe9DGw9F
        YCdVPd7Y2LB6cHAwATYKqeoEWs26AL9crs0znF176tSnAhhphQoouqyoRtGTJz/Rc09TqXgTAfP4HqAS
        uQoHWOfxLQewnITkGRQACR7dCrXalekVUZxjGHkNvdKMjIzo+a4BKJ2JPYT+xPvcx5/3RySwXvWXwPev
        74+l/v5f/kPRaP4CMROPLNzaw88AAAAASUVORK5CYII=
</value>
  </data>
</root>